apiVersion: apps/v1
kind: Deployment
metadata:
  name: aibrix-metadata-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: aibrix-metadata-service
spec:
  replicas: {{ .Values.metadata.service.replicas }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: aibrix-metadata-service
  template:
    metadata:
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        app.kubernetes.io/component: aibrix-metadata-service
    spec:
      {{- include "chart.imagePullSecrets" (dict "componentSecrets" .Values.metadata.service.imagePullSecrets "globalSecrets" .Values.global.imagePullSecrets) | nindent 6 }}
      serviceAccountName: aibrix-metadata-service
      initContainers:
        - name: init-redis
          image: {{ .Values.metadata.service.initContainer.image.repository }}:{{ .Values.metadata.service.initContainer.image.tag }}
          command:
            - 'sh'
            - '-c'
            - 'until echo "ping" | nc {{ .Values.metadata.service.redis.host }} {{ .Values.metadata.service.redis.port }} -w 1 | grep -c PONG; do echo waiting for redis; sleep 2; done'
      containers:
        - name: metadata-service
          image: {{ .Values.metadata.service.container.image.repository }}:{{ .Values.metadata.service.container.image.tag }}
          imagePullPolicy: {{ .Values.metadata.service.container.image.imagePullPolicy | default "IfNotPresent" }}
          command:
            - python
            - -m
            - aibrix.metadata.app
            - --host
            - "0.0.0.0"
            - --enable-k8s-job
          ports:
            - containerPort: 8090
          resources: {{ toYaml .Values.metadata.service.container.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8090
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8090
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: REDIS_HOST
              value: {{ .Values.metadata.service.redis.host }}
            - name: REDIS_PORT
              value: "{{ .Values.metadata.service.redis.port }}"
            {{- if .Values.metadata.redis.enablePassword }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aibrix-redis
                  key: redis-password
            {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      {{- with .Values.metadata.service.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
