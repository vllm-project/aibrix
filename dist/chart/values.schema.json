{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "type": "object",
  "title": "AIBrix Helm Chart Values Schema",
  "description": "Schema for validating AIBrix Helm chart values",
  "properties": {
    "controllerManager": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of controller manager replicas"
        },
        "container": {
          "type": "object",
          "properties": {
            "image": {
              "$ref": "#/$defs/imageSpec"
            },
            "resources": {
              "$ref": "#/$defs/resourceRequirements"
            },
            "probes": {
              "$ref": "#/$defs/probeConfiguration"
            }
          }
        },
        "gatewayTimeoutSeconds": {
          "type": "integer",
          "minimum": 1,
          "maximum": 3600,
          "description": "Gateway timeout in seconds"
        }
      },
      "required": ["replicas", "container"]
    },
    "gatewayPlugin": {
      "type": "object",
      "properties": {
        "replicaCount": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of gateway plugin replicas"
        },
        "initContainer": {
          "type": "object",
          "properties": {
            "image": {
              "$ref": "#/$defs/imageSpec"
            }
          }
        },
        "container": {
          "type": "object",
          "properties": {
            "image": {
              "$ref": "#/$defs/imageSpec"
            },
            "resources": {
              "$ref": "#/$defs/resourceRequirements"
            },
            "probes": {
              "$ref": "#/$defs/probeConfiguration"
            },
            "envs": {
              "type": "object",
              "patternProperties": {
                "^[A-Z_][A-Z0-9_]*$": {
                  "type": "string"
                }
              }
            }
          }
        },
        "dependencies": {
          "type": "object",
          "properties": {
            "redis": {
              "$ref": "#/$defs/redisConnection"
            }
          }
        },
        "messageTimeout": {
          "type": "string",
          "pattern": "^[0-9]+[smh]$",
          "description": "Message timeout (e.g., '60s', '5m')"
        }
      },
      "required": ["replicaCount", "container"]
    },
    "gpuOptimizer": {
      "type": "object",
      "properties": {
        "replicaCount": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of GPU optimizer replicas"
        },
        "container": {
          "type": "object",
          "properties": {
            "image": {
              "$ref": "#/$defs/imageSpec"
            },
            "resources": {
              "$ref": "#/$defs/resourceRequirements"
            }
          }
        },
        "dependencies": {
          "type": "object",
          "properties": {
            "redis": {
              "$ref": "#/$defs/redisConnection"
            }
          }
        }
      },
      "required": ["replicaCount", "container"]
    },
    "gateway": {
      "type": "object",
      "properties": {
        "envoyProxy": {
          "type": "object",
          "properties": {
            "replicas": {
              "type": "integer",
              "minimum": 1
            },
            "container": {
              "type": "object",
              "properties": {
                "envoy": {
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9._/-]+:[a-zA-Z0-9._-]+$"
                    },
                    "resources": {
                      "$ref": "#/$defs/resourceRequirements"
                    }
                  }
                },
                "shutdownManager": {
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9._/-]+:[a-zA-Z0-9._-]+$"
                    },
                    "resources": {
                      "$ref": "#/$defs/resourceRequirements"
                    }
                  }
                }
              }
            }
          }
        },
        "clientTrafficPolicy": {
          "type": "object",
          "properties": {
            "connection": {
              "type": "object",
              "properties": {
                "bufferLimit": {
                  "type": "integer",
                  "minimum": 1024,
                  "description": "Buffer limit in bytes"
                }
              }
            }
          }
        },
        "envoyPatchPolicy": {
          "type": "object",
          "properties": {
            "route": {
              "type": "object",
              "properties": {
                "timeout": {
                  "type": "string",
                  "pattern": "^[0-9]+[smh]$"
                },
                "connectTimeout": {
                  "type": "string",
                  "pattern": "^[0-9]+[smh]$"
                }
              }
            }
          }
        }
      }
    },
    "metadata": {
      "type": "object",
      "properties": {
        "service": {
          "type": "object",
          "properties": {
            "replicas": {
              "type": "integer",
              "minimum": 1
            },
            "initContainer": {
              "type": "object",
              "properties": {
                "image": {
                  "$ref": "#/$defs/imageSpec"
                }
              }
            },
            "container": {
              "type": "object",
              "properties": {
                "image": {
                  "$ref": "#/$defs/imageSpec"
                },
                "resources": {
                  "$ref": "#/$defs/resourceRequirements"
                }
              }
            },
            "redis": {
              "$ref": "#/$defs/redisConnection"
            },
            "metricRefreshIntervalMs": {
              "type": "string",
              "pattern": "^[0-9]+$",
              "description": "Metric refresh interval in milliseconds"
            }
          }
        },
        "redis": {
          "type": "object",
          "properties": {
            "replicas": {
              "type": "integer",
              "minimum": 1
            },
            "container": {
              "type": "object",
              "properties": {
                "image": {
                  "$ref": "#/$defs/imageSpec"
                },
                "resources": {
                  "$ref": "#/$defs/resourceRequirements"
                }
              }
            }
          }
        }
      }
    },
    "crd": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Whether to install CRDs"
        },
        "keep": {
          "type": "boolean",
          "description": "Whether to keep CRDs when uninstalling"
        }
      },
      "required": ["enable", "keep"]
    },
    "webhook": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Whether to enable webhooks"
        }
      },
      "required": ["enable"]
    },
    "prometheus": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Whether to enable Prometheus monitoring"
        }
      },
      "required": ["enable"]
    },
    "certmanager": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Whether to enable cert-manager integration"
        }
      },
      "required": ["enable"]
    }
  },
  "required": [
    "controllerManager",
    "gatewayPlugin",
    "gateway",
    "metadata",
    "crd",
    "webhook",
    "prometheus",
    "certmanager"
  ],
  "$defs": {
    "imageSpec": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9._/-]+$",
          "description": "Image repository"
        },
        "tag": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9._-]+$",
          "description": "Image tag"
        },
        "imagePullPolicy": {
          "type": "string",
          "enum": ["Always", "IfNotPresent", "Never"],
          "description": "Image pull policy"
        }
      },
      "required": ["repository", "tag"]
    },
    "resourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^([0-9]+m|[0-9]*\\.?[0-9]+)$",
              "description": "CPU limit (e.g., '500m', '1', '1.5')"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(Ki|Mi|Gi|Ti|Pi|Ei|k|M|G|T|P|E)$",
              "description": "Memory limit (e.g., '128Mi', '1Gi')"
            }
          }
        },
        "requests": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^([0-9]+m|[0-9]*\\.?[0-9]+)$",
              "description": "CPU request (e.g., '100m', '0.5')"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(Ki|Mi|Gi|Ti|Pi|Ei|k|M|G|T|P|E)$",
              "description": "Memory request (e.g., '64Mi', '512Mi')"
            }
          }
        }
      }
    },
    "probeConfiguration": {
      "type": "object",
      "properties": {
        "liveness": {
          "$ref": "#/$defs/probe"
        },
        "readiness": {
          "$ref": "#/$defs/probe"
        }
      }
    },
    "probe": {
      "type": "object",
      "properties": {
        "httpGet": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string",
              "pattern": "^/.*"
            },
            "port": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          }
        },
        "grpc": {
          "type": "object",
          "properties": {
            "port": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          }
        },
        "initialDelaySeconds": {
          "type": "integer",
          "minimum": 0
        },
        "periodSeconds": {
          "type": "integer",
          "minimum": 1
        },
        "timeoutSeconds": {
          "type": "integer",
          "minimum": 1
        },
        "failureThreshold": {
          "type": "integer",
          "minimum": 1
        }
      },
      "not": {
        "required": ["httpGet", "grpc"]
      }
    },
    "redisConnection": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "description": "Redis host"
        },
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "description": "Redis port"
        }
      },
      "required": ["host", "port"]
    }
  }
}