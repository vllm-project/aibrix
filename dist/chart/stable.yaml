# [Core]: AIBrix Deployment Configurations
global:
  imagePullSecrets: []

controllerManager:
  replicas: 1
  imagePullSecrets: []
  container:
    image:
      repository: aibrix/controller-manager
      tag: v0.4.1
      imagePullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi
    probes:
      liveness:
        httpGet:
          path: /healthz
          port: 8081
        initialDelaySeconds: 15
        periodSeconds: 20
      readiness:
        httpGet:
          path: /readyz
          port: 8081
        initialDelaySeconds: 5
        periodSeconds: 10
  gatewayTimeoutSeconds: 120

gatewayPlugin:
  replicaCount: 1
  imagePullSecrets: []
  initContainer:
    image:
      repository: busybox
      tag: stable
  container:
    image:
      repository: aibrix/gateway-plugins
      tag: v0.4.1
      imagePullPolicy: IfNotPresent
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: "1"
        memory: 1Gi
    probes:
      liveness:
        grpc:
          port: 50052
        initialDelaySeconds: 5
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 3
      readiness:
        grpc:
          port: 50052
        initialDelaySeconds: 5
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 3
    envs:
      AIBRIX_POD_METRIC_REFRESH_INTERVAL_MS: "50"
      AIBRIX_PREFIX_CACHE_TOKENIZER_TYPE: "character"
      AIBRIX_PREFIX_CACHE_BLOCK_SIZE: "128"
      AIBRIX_PREFIX_CACHE_POD_RUNNING_REQUEST_IMBALANCE_ABS_COUNT: "16"
      AIBRIX_PREFIX_CACHE_STANDARD_DEVIATION_FACTOR: "2"
      AIBRIX_PREFILL_REQUEST_TIMEOUT: "60"
  dependencies:
    redis:
      host: aibrix-redis-master
      port: 6379
  messageTimeout: "60s"


gpuOptimizer:
  replicaCount: 1
  imagePullSecrets: []
  container:
    image:
      repository: aibrix/runtime
      tag: v0.4.1
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 10m
        memory: 64Mi
  dependencies:
    redis:
      host: aibrix-redis-master
      port: 6379


gateway:
  envoyProxy:
    replicas: 1
    imagePullSecrets: []
    container:
      envoy:
        image: envoyproxy/envoy:v1.33.2
        resources:
          requests:
            cpu: "1"
            memory: 1Gi
          limits:
            cpu: "1"
            memory: 1Gi
      shutdownManager:
        image: envoyproxy/gateway:v1.2.8
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
  clientTrafficPolicy:
    connection:
      bufferLimit: 4194304  # 4MiB
  envoyPatchPolicy:
    route:
      timeout: 120s          # e.g., "120s" or "2m"
      connectTimeout: 6s     # e.g., "6s"


metadata:
  service:
    replicas: 1
    imagePullSecrets: []
    initContainer:
      image:
        repository: busybox
        tag: stable
    container:
      image:
        repository: aibrix/metadata-service
        tag: v0.4.1
        imagePullPolicy: IfNotPresent
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 64Mi
    redis:
      host: aibrix-redis-master
      port: 6379
    metricRefreshIntervalMs: "3600000"
  redis:
    replicas: 1
    imagePullSecrets: []
    container:
      image:
        repository: redis
        tag: "7.4"
      resources:
        requests:
          cpu: 100m
          memory: 100Mi

# [CRDs]: To enable the CRDs
crd:
  # This option determines whether the CRDs are included
  # in the installation process.
  enable: true

  # Enabling this option adds the "helm.sh/resource-policy": keep
  # annotation to the CRD, ensuring it remains installed even when
  # the Helm release is uninstalled.
  # NOTE: Removing the CRDs will also remove all cert-manager CR(s)
  # (Certificates, Issuers, ...) due to garbage collection.
  keep: true


# [WEBHOOKS]: Webhooks configuration
# The following configuration is automatically generated from the manifests
# generated by controller-gen. To update run 'make manifests' and
# the edit command with the '--force' flag
webhook:
  enable: true

# [PROMETHEUS]: To enable a ServiceMonitor to export metrics to Prometheus set true
prometheus:
  enable: false

# [CERT-MANAGER]: To enable cert-manager injection to webhooks set true
certmanager:
  enable: false
