# Build the manager binary
FROM golang:1.22 AS builder
ARG TARGETOS
ARG TARGETARCH

WORKDIR /workspace

# Install build dependencies for static ZMQ
RUN apt-get update && apt-get install -y \
    build-essential cmake git wget pkg-config \
    libtool autoconf automake

# Build static libzmq
COPY scripts/build-static-zmq.sh /tmp/
RUN chmod +x /tmp/build-static-zmq.sh && /tmp/build-static-zmq.sh

# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source
COPY cmd/ cmd/
COPY api/ api/
COPY pkg/ pkg/

# Build with static linking
ENV CGO_ENABLED=1
ENV CGO_LDFLAGS="-L/usr/local/lib -lzmq -lsodium -lstdc++ -lpthread -lm -static"
ENV PKG_CONFIG_PATH="/usr/local/lib/pkgconfig"

RUN GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} \
    go build -tags zmq \
    -ldflags '-extldflags "-static"' \
    -a -o gateway-plugins cmd/plugins/main.go

# Use distroless as minimal base image to package the manager binary
# Refer to https://github.com/GoogleContainerTools/distroless for more details
FROM gcr.io/distroless/static:nonroot
WORKDIR /
COPY --from=builder /workspace/gateway-plugins .
USER 65532:65532

ENTRYPOINT ["/gateway-plugins"]
