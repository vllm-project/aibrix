/*
Copyright 2024 The Aibrix Team.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/vllm-project/aibrix/api/orchestration/v1alpha1"
	intstr "k8s.io/apimachinery/pkg/util/intstr"
)

// StormServiceUpdateStrategyApplyConfiguration represents a declarative configuration of the StormServiceUpdateStrategy type for use
// with apply.
type StormServiceUpdateStrategyApplyConfiguration struct {
	Type           *v1alpha1.StormServiceUpdateStrategyType `json:"type,omitempty"`
	MaxUnavailable *intstr.IntOrString                      `json:"maxUnavailable,omitempty"`
	MaxSurge       *intstr.IntOrString                      `json:"maxSurge,omitempty"`
	Canary         *CanaryUpdateStrategyApplyConfiguration  `json:"canary,omitempty"`
}

// StormServiceUpdateStrategyApplyConfiguration constructs a declarative configuration of the StormServiceUpdateStrategy type for use with
// apply.
func StormServiceUpdateStrategy() *StormServiceUpdateStrategyApplyConfiguration {
	return &StormServiceUpdateStrategyApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *StormServiceUpdateStrategyApplyConfiguration) WithType(value v1alpha1.StormServiceUpdateStrategyType) *StormServiceUpdateStrategyApplyConfiguration {
	b.Type = &value
	return b
}

// WithMaxUnavailable sets the MaxUnavailable field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxUnavailable field is set to the value of the last call.
func (b *StormServiceUpdateStrategyApplyConfiguration) WithMaxUnavailable(value intstr.IntOrString) *StormServiceUpdateStrategyApplyConfiguration {
	b.MaxUnavailable = &value
	return b
}

// WithMaxSurge sets the MaxSurge field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxSurge field is set to the value of the last call.
func (b *StormServiceUpdateStrategyApplyConfiguration) WithMaxSurge(value intstr.IntOrString) *StormServiceUpdateStrategyApplyConfiguration {
	b.MaxSurge = &value
	return b
}

// WithCanary sets the Canary field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Canary field is set to the value of the last call.
func (b *StormServiceUpdateStrategyApplyConfiguration) WithCanary(value *CanaryUpdateStrategyApplyConfiguration) *StormServiceUpdateStrategyApplyConfiguration {
	b.Canary = value
	return b
}
