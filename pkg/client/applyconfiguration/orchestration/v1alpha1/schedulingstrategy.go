/*
Copyright 2024 The Aibrix Team.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// SchedulingStrategyApplyConfiguration represents a declarative configuration of the SchedulingStrategy type for use
// with apply.
type SchedulingStrategyApplyConfiguration struct {
	GodelSchedulingStrategy        *GodelSchedulingStrategySpecApplyConfiguration        `json:"godelSchedulingStrategy,omitempty"`
	CoschedulingSchedulingStrategy *CoschedulingSchedulingStrategySpecApplyConfiguration `json:"coschedulingSchedulingStrategy,omitempty"`
	VolcanoSchedulingStrategy      *VolcanoSchedulingStrategySpecApplyConfiguration      `json:"volcanoSchedulingStrategy,omitempty"`
}

// SchedulingStrategyApplyConfiguration constructs a declarative configuration of the SchedulingStrategy type for use with
// apply.
func SchedulingStrategy() *SchedulingStrategyApplyConfiguration {
	return &SchedulingStrategyApplyConfiguration{}
}

// WithGodelSchedulingStrategy sets the GodelSchedulingStrategy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GodelSchedulingStrategy field is set to the value of the last call.
func (b *SchedulingStrategyApplyConfiguration) WithGodelSchedulingStrategy(value *GodelSchedulingStrategySpecApplyConfiguration) *SchedulingStrategyApplyConfiguration {
	b.GodelSchedulingStrategy = value
	return b
}

// WithCoschedulingSchedulingStrategy sets the CoschedulingSchedulingStrategy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CoschedulingSchedulingStrategy field is set to the value of the last call.
func (b *SchedulingStrategyApplyConfiguration) WithCoschedulingSchedulingStrategy(value *CoschedulingSchedulingStrategySpecApplyConfiguration) *SchedulingStrategyApplyConfiguration {
	b.CoschedulingSchedulingStrategy = value
	return b
}

// WithVolcanoSchedulingStrategy sets the VolcanoSchedulingStrategy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VolcanoSchedulingStrategy field is set to the value of the last call.
func (b *SchedulingStrategyApplyConfiguration) WithVolcanoSchedulingStrategy(value *VolcanoSchedulingStrategySpecApplyConfiguration) *SchedulingStrategyApplyConfiguration {
	b.VolcanoSchedulingStrategy = value
	return b
}
