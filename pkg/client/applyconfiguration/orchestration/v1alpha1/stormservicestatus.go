/*
Copyright 2024 The Aibrix Team.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/vllm-project/aibrix/api/orchestration/v1alpha1"
)

// StormServiceStatusApplyConfiguration represents a declarative configuration of the StormServiceStatus type for use
// with apply.
type StormServiceStatusApplyConfiguration struct {
	ObservedGeneration    *int64                          `json:"observedGeneration,omitempty"`
	Replicas              *int32                          `json:"replicas,omitempty"`
	ReadyReplicas         *int32                          `json:"readyReplicas,omitempty"`
	NotReadyReplicas      *int32                          `json:"notReadyReplicas,omitempty"`
	CurrentReplicas       *int32                          `json:"currentReplicas,omitempty"`
	UpdatedReplicas       *int32                          `json:"updatedReplicas,omitempty"`
	CurrentRevision       *string                         `json:"currentRevision,omitempty"`
	UpdateRevision        *string                         `json:"updateRevision,omitempty"`
	UpdatedReadyReplicas  *int32                          `json:"updatedReadyReplicas,omitempty"`
	Conditions            *v1alpha1.Conditions            `json:"conditions,omitempty"`
	CollisionCount        *int32                          `json:"collisionCount,omitempty"`
	ScalingTargetSelector *string                         `json:"scalingTargetSelector,omitempty"`
	CanaryStatus          *CanaryStatusApplyConfiguration `json:"canaryStatus,omitempty"`
}

// StormServiceStatusApplyConfiguration constructs a declarative configuration of the StormServiceStatus type for use with
// apply.
func StormServiceStatus() *StormServiceStatusApplyConfiguration {
	return &StormServiceStatusApplyConfiguration{}
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithObservedGeneration(value int64) *StormServiceStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithReplicas(value int32) *StormServiceStatusApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithReadyReplicas sets the ReadyReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReadyReplicas field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithReadyReplicas(value int32) *StormServiceStatusApplyConfiguration {
	b.ReadyReplicas = &value
	return b
}

// WithNotReadyReplicas sets the NotReadyReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NotReadyReplicas field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithNotReadyReplicas(value int32) *StormServiceStatusApplyConfiguration {
	b.NotReadyReplicas = &value
	return b
}

// WithCurrentReplicas sets the CurrentReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CurrentReplicas field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithCurrentReplicas(value int32) *StormServiceStatusApplyConfiguration {
	b.CurrentReplicas = &value
	return b
}

// WithUpdatedReplicas sets the UpdatedReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UpdatedReplicas field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithUpdatedReplicas(value int32) *StormServiceStatusApplyConfiguration {
	b.UpdatedReplicas = &value
	return b
}

// WithCurrentRevision sets the CurrentRevision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CurrentRevision field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithCurrentRevision(value string) *StormServiceStatusApplyConfiguration {
	b.CurrentRevision = &value
	return b
}

// WithUpdateRevision sets the UpdateRevision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UpdateRevision field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithUpdateRevision(value string) *StormServiceStatusApplyConfiguration {
	b.UpdateRevision = &value
	return b
}

// WithUpdatedReadyReplicas sets the UpdatedReadyReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UpdatedReadyReplicas field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithUpdatedReadyReplicas(value int32) *StormServiceStatusApplyConfiguration {
	b.UpdatedReadyReplicas = &value
	return b
}

// WithConditions sets the Conditions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Conditions field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithConditions(value v1alpha1.Conditions) *StormServiceStatusApplyConfiguration {
	b.Conditions = &value
	return b
}

// WithCollisionCount sets the CollisionCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CollisionCount field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithCollisionCount(value int32) *StormServiceStatusApplyConfiguration {
	b.CollisionCount = &value
	return b
}

// WithScalingTargetSelector sets the ScalingTargetSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ScalingTargetSelector field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithScalingTargetSelector(value string) *StormServiceStatusApplyConfiguration {
	b.ScalingTargetSelector = &value
	return b
}

// WithCanaryStatus sets the CanaryStatus field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CanaryStatus field is set to the value of the last call.
func (b *StormServiceStatusApplyConfiguration) WithCanaryStatus(value *CanaryStatusApplyConfiguration) *StormServiceStatusApplyConfiguration {
	b.CanaryStatus = value
	return b
}
