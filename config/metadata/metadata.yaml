apiVersion: v1
kind: Service
metadata:
  name: metadata-service
  namespace: aibrix-system
spec:
  selector:
    app: metadata-service
  ports:
    - protocol: TCP
      port: 8090
      targetPort: 8090
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aibrix-metadata-service
  namespace: aibrix-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aibrix-metadata-service-reader
rules:
  # Read pods to get base models
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]
  # Read ModelAdapter CRDs to get adapter models
  - apiGroups: ["model.aibrix.ai"]
    resources: ["modeladapters"]
    verbs: ["get", "list"]
  # For batch job watching
  - apiGroups: ["batch"] 
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # For kopf high availability
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apiextensions.k8s.io"] # required by kopf
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""] # required by kopf
    resources: ["namespaces"]
    verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aibrix-metadata-service-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aibrix-metadata-service-reader
subjects:
  - kind: ServiceAccount
    name: aibrix-metadata-service
    namespace: aibrix-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metadata-service
  namespace: aibrix-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metadata-service
  template:
    metadata:
      labels:
        app: metadata-service
    spec:
      serviceAccountName: aibrix-metadata-service
      initContainers:
        - name: init-redis
          image: busybox
          command: ['sh', '-c', 'until echo "ping" | nc aibrix-redis-master 6379 -w 1 | grep -c PONG; do echo waiting for redis; sleep 2; done']
      volumes:
        - name: config-volume
          configMap:
            name: metadata-config
      containers:
        - name: metadata-service
          image: metadata-service:latest
          command:
            - aibrix_metadata
            - --host
            - "0.0.0.0"
            - --port
            - "8090"
          imagePullPolicy: IfNotPresent
          # Enable S3 or TOS to enable-k8s-job, default disabled.
          ports:
            - containerPort: 8090
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 128Mi
          env:
            - name: REDIS_HOST
              value: aibrix-redis-master
            - name: REDIS_PORT
              value: "6379"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8090
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8090
            initialDelaySeconds: 5
            periodSeconds: 5
