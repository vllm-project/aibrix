---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: podautoscalers.autoscaling.aibrix.ai
spec:
  group: autoscaling.aibrix.ai
  names:
    kind: PodAutoscaler
    listKind: PodAutoscalerList
    plural: podautoscalers
    singular: podautoscaler
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          PodAutoscaler is the Schema for the podautoscalers API, a resource to scale Kubernetes pods based on observed metrics.
          The fields in the spec determine how the scaling behavior should be applied.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired behavior of the PodAutoscaler.
            properties:
              maxReplicas:
                description: MaxReplicas is the maximum number of replicas to which
                  the target can be scaled up.
                format: int32
                type: integer
              metricsSources:
                description: MetricsSources defines a list of sources from which metrics
                  are collected to make scaling decisions.
                items:
                  description: MetricSource defines an endpoint and path from which
                    metrics are collected.
                  properties:
                    endpoint:
                      description: e.g. service1.example.com
                      type: string
                    path:
                      description: e.g. /api/metrics/cpu
                      type: string
                  required:
                  - endpoint
                  - path
                  type: object
                type: array
              minReplicas:
                description: MinReplicas is the minimum number of replicas to which
                  the target can be scaled down.
                format: int32
                type: integer
              scaleTargetRef:
                description: |-
                  INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                  ScaleTargetRef points to scale-able resource that this PodAutoscaler should target and scale. e.g. Deployment
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              scalingStrategy:
                description: ScalingStrategy defines the strategy to use for scaling.
                type: string
              targetMetric:
                type: string
              targetValue:
                type: string
            required:
            - maxReplicas
            - scaleTargetRef
            - scalingStrategy
            - targetMetric
            - targetValue
            type: object
          status:
            description: Status represents the current information about the PodAutoscaler.
            properties:
              actualScale:
                description: |-
                  ActualScale represents the actual number of running instances of the scaled target.
                  it may be different from DesiredScale
                format: int32
                type: integer
              desiredScale:
                description: |-
                  DesiredScale represents the desired number of instances computed by the PodAutoscaler based on the current metrics.
                  it's computed according to Scaling policy after observing service metrics
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
